create database d1
use d1



create table student(rn int , 
name char(20),
address char(30),
marks int)

insert into student values(
1,'Ajay','Delhi',90)

insert into student values(
2,'Vijay','Delhi',90)

insert into student values(
3,'Deepak','Gurgaon',45)

insert into student values(
4,'Prabhas','Calcutta',98)

insert into student values(
5,'Sagar','Calcutta',23)


Select * from student


----------------------------------------------------------------------------------------

insert multile records using 1 insert statement
insert into student values
(1,'Ajay','Delhi',90),
(1,'Ajay','Delhi',90),
(1,'Ajay','Delhi',90),
(1,'Ajay','Delhi',90),
(1,'Ajay','Delhi',90)


create table student(rn int , 
name char(20),
address char(30),
marks int)

insert into student values(
1,'Ajay','Delhi',90)

insert into student values(
2,'Vijay','Delhi',90)

insert into student values(
3,'Deepak','Gurgaon',45)

insert into student values(
4,'Prabhas','Calcutta',98)

insert into student values(
5,'Sagar','Calcutta',23)


Select * from student

-- insert multile records using 1 insert statement
insert into student values
(1,'Ajay','Delhi',90),
(1,'Ajay','Delhi',90),
(1,'Ajay','Delhi',90),
(1,'Ajay','Delhi',90),
(1,'Ajay','Delhi',90)


Select * from student
-- Projection , when you want to display selected columns
-- * al columns
select name , address from student

select name AS "Student Name" , address as "Student Address" from student
select name  "Student Name" , address  "Student Address" from student

Select * from student

select name , marks , marks + 10 from student
select name , marks , marks + 10 AS "Incremented Marks" from student

-- Selection , we want to filter records based on some condition
-- we use where clause

select * from student where rn < 6 

select * from student where rn > 6  

select * from student where rn > 1 and rn < 3 

select * from student where rn between 1 and 3 

select * from student where rn = 2 or rn = 4

select * from student where rn IN (2,4)

-- RANGE :  select  * from studnet where rn >= 1 and rn <= 6 
-- To replace and ,we can use BETWEEN Operator (Range)
-- select  * from studnet where rn between 1 and 6 
-- To replace or , we can use IN operator


Select * from student where name = 'Deepak'

-- Give records where name start with D
-- LIKE Operator its used for pattern matching
-- %  means any no. of characters
-- _ means 1 character, __ upto 2 characters
select * from student where name LIKE 'D%'
select * from student where name LIKE '%a'
select * from student where name LIKE '%i%'
-- Records where rn is less than 3 and addrss is Delhi
select * from student where rn <3 and address ='Delhi'





------------------------------------------------DAY2---------------------------------------------------------






















use d1
-- Database > Collection of objects
-- objects are tables , views , procedures , etc;

-- create table
-- insert
-- select , where

select * from sys.tables 

select * from student


select * from student

-- edit records , update

update student set  address ='Delhi' where name='Prabhas'


update student set remarks='Good' 

-- delete records

delete from student where name='Deepak'

-- create one table and copy all the records to that table
select * into student2 from student

select * from sys.tables
-- add one more column

alter table student add remarks varchar(50)


-- delete one more column

alter table student2 drop column marks 
select * from student2

-- change column type or width

alter table student alter column name char(30) 

-- rename a column

-- Syntax
-- sp_rename 'table name.columnoldname', 'newname' ,'COLUMN'
sp_rename 'student.remarks' , 'description' ,'COLUMN'

select * from student

-------------------------------

-- Constraints : restrictions / validation that we put on the value of column

-- Primary Key
-- not null
-- unique
-- default
-- check
-- foreign key

-- Delete a Table
-- drop table tablename

drop table student
create table COURSE_INFO(COURSE_CODE varchar(10) primary key,COURSE_NAME varchar(20) not null,COURSE_DESCRIPTION varchar(25),COURSE_START_DATE date,COURSE_DURATION int,NO_OF_PARTICIPANTS int,COURSE_TYPE char(3))
create table STUDENT_INFO(STUDENT_ID varchar(10) primary key,FIRST_NAME varchar(20),LAST_NAME varchar(25),ADDRESS varchar(150))



create table student (rn int primary key,
name varchar(20) not null,
marks int check(marks between 0 and 100),
address varchar(20),
trainer varchar(20) unique,
course char(10) check (course IN ('C', 'C++','C#','Java')),
batchcode char(4) default 'B001')
  
insert into student values 
(1,'Ajay',20,'Delhi','T1','C','B002')


insert into student values 
(2,'Ajay',20,'Delhi','T2','C','B002')


insert into student values 
(3,'Deepak',90,'Delhi','T3','C','B002')


insert into student values 
(4,'Deepak',90,'Delhi','T4','C#','B002')


Select * from student



---------------------------


Select * from student
-- null : Not available 
-- How do we insert null
-- 2 ways , implicit way / explicit way
-- implicit way 

insert into student(rn, name , batchcode) values( 5,'Lalit','B003')

-- explicit way
 
insert into student(rn, name , marks, course,trainer,batchcode)
 values( 6,'Lalit', 89, null, 'T5','B003')

 -- Give all Recors where trainer has a value

 select * from student where trainer is null
 
 select * from student where trainer is not null

------------------------------------

-- drop the constraint
 alter table student drop constraint [UQ__student__9EDF7708060DEAE8]



 -- Assign names to the constaints

 create table student (rn int constraint pk primary key,
name varchar(20)  constraint notnull not null,
marks int constraint marksrange check(marks between 0 and 100),
address varchar(20),
trainer varchar(20) constraint uniquetrainer unique,
course char(10) constraint coursecheck check (course IN ('C', 'C++','C#','Java')),
batchcode char(4) constraint def default 'B001')



---------------------------------
alter table student drop constraint marksrange

------------------------------------


-- char () and varchar(20)

-- name char(20) -- fixed size
-- Ajay

-- name varchar(20) -- variable size 
-- Ajay
















1. Create table Employee
id int 
name varchar(20)
department varchar(20)
manager varchar(20)
Here id is primary key
name should not be null
department can be only HR, Accts , Sales
Manager Name can not be null
2.insert 5 records
3. Display all records
4.add one more column salary int, where salary can not be -ve
5. Modify all the records where department is HR , increase salary by 2800
 
6. Change manager name to Pradeep where department is accts and Sales
7. Change column name manager to managername
8. Display all records where salary is more than 15000
9. Display all records where department is Accts and HR and salary is more than 15000
10. Display all employees of Accts Departament 
